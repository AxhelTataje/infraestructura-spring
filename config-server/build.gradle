apply plugin: 'application'
apply plugin: 'spring-boot'
apply plugin: 'docker'

mainClassName = 'com.celticintl.ConfigServerMain'

buildscript {
    repositories {
        mavenCentral()        
    }
   
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

dependencies {
	// Spring
	compile 'org.springframework:spring-context:4.2.3.RELEASE'	
	compile('org.springframework.boot:spring-boot-starter:1.3.0.RELEASE') { exclude(group: 'ch.qos.logback') }
	compile('org.springframework.cloud:spring-cloud-starter-config:1.0.3.RELEASE') { exclude(group: 'ch.qos.logback') }
	compile('org.springframework.cloud:spring-cloud-config-server:1.0.4.RELEASE') { exclude(group: 'ch.qos.logback') }
    compile('org.springframework.boot:spring-boot-starter-security'){ exclude(group: 'ch.qos.logback') }
}

group = 'celticintl'
task buildDocker(type: Docker, dependsOn: assemble) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
